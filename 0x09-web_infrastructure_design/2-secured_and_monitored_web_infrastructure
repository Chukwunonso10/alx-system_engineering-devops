https://imgur.com/a/RQUhrdd


Additional Elements:

Firewalls: The three firewalls are added to enhance security by controlling and monitoring network traffic. Firewalls act as a barrier between the external network and the web servers, filtering incoming and outgoing traffic based on defined rules and policies. They help protect against unauthorized access and potential security threats.
SSL Certificate: An SSL certificate is implemented to enable HTTPS, which ensures encrypted communication between the users and the website. It provides secure transmission of sensitive data, such as login credentials and personal information, protecting against eavesdropping and data tampering.
Monitoring Clients (Data Collectors): These monitoring clients are responsible for collecting data about the performance, availability, and security of the web infrastructure. They gather relevant metrics and logs from various components, such as the web servers, load balancer, and firewalls, and send the data to a monitoring service like Sumologic.
Importance of Firewalls:

Firewalls play a crucial role in securing the infrastructure by filtering network traffic based on predefined rules. They help prevent unauthorized access, block malicious activities, and protect against various types of cyber threats, such as DDoS attacks, intrusion attempts, and unauthorized data access.
HTTPS for Encrypted Traffic:

Serving traffic over HTTPS ensures the encryption of data transmitted between the users and the website. This encryption safeguards sensitive information from being intercepted or tampered with during transmission. It is especially important when handling confidential user data, such as passwords, financial details, and personal information.
Monitoring Purpose:

Monitoring is used to track the health, performance, and security of the web infrastructure. It provides insights into resource utilization, response times, error rates, and potential security breaches. Monitoring helps identify issues, diagnose problems, and ensure proactive maintenance and troubleshooting.
Data Collection by Monitoring Tool:

The monitoring clients, acting as data collectors, gather relevant data from various components of the infrastructure. They collect metrics, logs, and events related to server performance, network traffic, security events, and other system-level information. The collected data is then sent to the monitoring service, such as Sumologic, where it can be analyzed and visualized.
Monitoring Web Server QPS:

To monitor the web server's QPS (Queries Per Second), the monitoring tool can collect and analyze server logs or use specialized metrics provided by the web server itself. This can include measuring the number of incoming requests per second, tracking response times, and monitoring resource utilization (CPU, memory, etc.). By setting up appropriate monitoring thresholds, any deviations or performance issues can be detected and addressed.
Now let's discuss the issues with this infrastructure:

Terminating SSL at the Load Balancer Level:

Terminating SSL at the load balancer means decrypting the HTTPS traffic at the load balancer and forwarding it as plain HTTP to the web servers. This can be an issue because it exposes the internal traffic between the load balancer and the web servers to potential risks. It's recommended to implement end-to-end encryption by enabling SSL/TLS communication between the load balancer and the web servers as well.
Single MySQL Server Capable of Accepting Writes:

Having only one MySQL server that can accept writes creates a single point of failure (SPOF) for write operations. If the MySQL server fails, it can lead to data inconsistency and impact the availability of the application. Implementing a primary-replica (master-slave) cluster with multiple MySQL servers can improve availability, scalability, and data redundancy.
Servers with All the Same Components:

Having servers with identical components (database, web server, and application server) can limit scalability and flexibility. It may hinder the ability to scale different components independently based on specific requirements. For better performance and resource utilization, it's recommended to separate components onto different servers, allowing them to scale independently and optimize resource allocation.
